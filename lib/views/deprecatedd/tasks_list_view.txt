
import 'dart:developer' as dev;

import 'package:rpg_life_app/constants/palette.dart' as clr;

import 'package:flutter/material.dart';
import 'package:rpg_life_app/services/crud/task_service.dart';

import 'package:rpg_life_app/constants/routes.dart';

typedef ToggleTaskCallback = bool Function(DatabaseTask task);

class TasksListView extends StatelessWidget {
  final List<DatabaseTask> allTasks;
  final ToggleTaskCallback toggleTask;
  final int selectedIndex;

  const TasksListView({super.key, required this.allTasks, required this.toggleTask, required this.selectedIndex});

  List<DatabaseTask> get completedTasks => allTasks.where((task) => task.isCompleted).toList();
  List<DatabaseTask> get uncompletedTasks => allTasks.where((task) => !task.isCompleted).toList();

  @override
  Widget build(BuildContext context) {
    List<DatabaseTask> tasks = selectedIndex == 0 ? uncompletedTasks : completedTasks;
    dev.log("Tasks: Started build method, selectedIndex: $selectedIndex, Tasks length: ${tasks.length}");
    return ListView.builder(
        itemCount: tasks.length,
        itemBuilder: (context, index) {
          dev.log("Task is rendering");
          return
            Card(
              elevation: 4,
              margin: EdgeInsets.fromLTRB(15, 6, 15, 6),
              shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(5)),
              color: clr.onPrimary,
              child: ListTile(
                contentPadding: EdgeInsets.fromLTRB(5, 0, 5, 0),
                title: Text(
                    tasks[index].name ,
                    maxLines: 1,
                    softWrap: true,
                    overflow: TextOverflow.ellipsis,
                    style: TextStyle( color: clr.textSecondary),
                ),
                subtitle: Text(
                  tasks[index].note,
                  maxLines: 2,
                  softWrap: true,
                  overflow: TextOverflow.ellipsis,
                  style: TextStyle( color: clr.textDisabled),
                ),
                leading: IconButton(
                  icon: Icon(
                      tasks[index].isCompleted ?
                      Icons.check_box_rounded :
                      Icons.check_box_outline_blank
                  ),
                  color: clr.textDisabled,
                  onPressed: () {
                    dev.log("Pressed check box");
                    dev.log(toggleTask(tasks[index]).toString());
                  },
                ),
                trailing: IconButton(
                  icon: Icon(Icons.edit_outlined),
                  color: clr.textDisabled,
                  onPressed: () {
                    dev.log("Pressed more vert");
                    Navigator.of(context).pushNamed(
                        editTaskRoute,
                        arguments: {tasks[index]: false}
                    );
                  },
                ),
                style: ListTileStyle.drawer,
                shape: RoundedRectangleBorder(
                  borderRadius: BorderRadius.circular(10),
                ),
              )
          );
        }
      );
  }
}
